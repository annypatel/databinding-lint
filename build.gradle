apply plugin: "com.github.ben-manes.versions"

buildscript {

    // Build configuration
    ext.buildConfig = [
        'minSdk'    : 16,
        'compileSdk': 28,
        'targetSdk' : 28
    ]

    // Dependency versions
    ext.versions = [
        'agp'         : '4.0.1',
        'kotlin'      : '1.4.10',
        'spotless'    : '5.6.1',
        'ktlint'      : '0.39.0',
        'gvp'         : '0.33.0',
        'amp'         : '3.6.3',
        'dokka'       : '0.9.18',
        'dokkaAndroid': '0.9.18',
        'lint'        : '27.0.1',
        'databinding' : '4.0.1',
        'antlr'       : '4.5.3',
        'junit'       : '4.13'
    ]

    // Dependencies
    ext.deps = [
        'kotlin'     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
        'lint'       : [
            'api' : "com.android.tools.lint:lint-api:$versions.lint",
            'test': "com.android.tools.lint:lint-tests:$versions.lint"
        ],
        'databinding': "androidx.databinding:databinding-compiler-common:$versions.databinding",
        'antlr'      : "org.antlr:antlr4:$versions.antlr",
        'junit'      : "junit:junit:$versions.junit"
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$versions.agp"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$versions.spotless"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versions.gvp"
        classpath "digital.wup:android-maven-publish:$versions.amp"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$versions.dokka"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$versions.dokkaAndroid"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    apply plugin: 'com.diffplug.spotless'

    spotless {
        kotlin {
            target "**/*.kt"
            ktlint(versions.ktlint)
        }
    }

    plugins.withId("kotlin") {

        compileKotlin {
            kotlinOptions {
                jvmTarget = "1.8"
            }
        }

        compileTestKotlin {
            kotlinOptions {
                jvmTarget = "1.8"
            }
        }
    }

    plugins.withId("com.android.library") {

        android {
            compileOptions {
                sourceCompatibility = "1.8"
                targetCompatibility = "1.8"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        !isNonStable(it.currentVersion) && isNonStable(it.candidate.version)
    }
}